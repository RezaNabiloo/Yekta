@using BSG.ADInventory.Resources
@{ ViewBag.EntityName = "ProjectDetail";}
<section class="content" style="padding-top:10px;">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="overlay-wrapper hidden" id="overly-loading-@ViewBag.EntityName-@ViewBag.ProjectId">
                    <div class="overlay flex-column"><i class="fad fa-2x fa-spinner fa-spin"></i><div class="pt-2">@Resource.Loading</div></div>
                </div>
                <div class="card card-default">
                    <div class="card-header">
                        <div class="row ">
                            <div class="col-md-3" id="card-title"><h4 class="card-title float-right"><i class="fad fa-chart-network fa-lg"></i> @Resource.Details @Resource.Project - <b>@ViewBag.ProjectTitle</b></h4></div>
                            <div class="col-md-9" id="card-buttons-@ViewBag.EntityName-@ViewBag.ProjectId">
                                
                            </div>
                        </div>
                    </div>
                    <div class="card-body" style="overflow-x:hidden">
                        <table id="data-table-@ViewBag.EntityName-@ViewBag.ProjectId" class="display table-hover table-striped" style="width:100%">
                            <thead>
                                <tr>
                                    <th class="table-col-sm">@Resource.Proceedings</th>
                                    <th class="table-col-sm">@Html.DisplayName(Resource.Id)</th>
                                    <th>@Html.DisplayName(Resource.Title)</th>
                                    <th>@Html.DisplayName(Resource.Description)</th>                                    
                                    <th>@Html.DisplayName(Resource.IsActive)</th>
                                </tr>
                            </thead>

                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script src="~/Content/plugins/jquery-validation/jquery.validate.unobtrusive.min.js"></script>
<script type="text/javascript">

    $(document).ready(function () {
         var entity = '@ViewBag.EntityName';
        $('#data-table-' + entity +'-@ViewBag.ProjectId' + ' thead tr')
                .clone(true)
                .addClass('filters')
            .appendTo('#data-table-' + entity +'-@ViewBag.ProjectId' + ' thead');

        table = $('#data-table-' + entity+'-@ViewBag.ProjectId' ).DataTable({
                orderCellsTop: true,
                fixedHeader: true,
                response: true,
                lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, "همه"]],

                dom: 'lfBrtip',
                buttons: [
                    'copy', 'excel', 'pdf', 'print', 'colvis',
                    {
                        text: '<i class="fal fa-refresh fa-md"></i> @Resource.Refresh',
                        action: function (e, dt, node, config) {
                            $('#data-table-' + entity+'-@ViewBag.ProjectId').dataTable().api().ajax.reload();
                        }
                    },
                     {
                        text: '<i class="fas fa-plus fa-md text-green"></i> @Resource.Create',
                         action: function (e, dt, node, config) {
                             crudActionLocal(entity, entity + '/CrudAction', 0, (@ViewBag.ProjectId), '@Resource.Create @Resource.Details @Resource.Project', '');
                        }
                    }
                ],
                retrieve: true,
                Response: true,
                order: [0, 'asc'],
                bProcessing: true,
                language: {
                    url: '/Content/plugins/datatables/fa.json'
                },

                aoColumns: [
                    {
                        data: 'Id',
                        render: function (data, type, row, meta) {
                            return '<div class="btn-group show  table-action-menu">' +
                                '<button type="button" class="btn btn-default dropdown-toggle text-center" data-toggle="dropdown" aria-expanded="true">' +
                                '<span class="fas fa-ellipsis-h fa-sm text-black-50"></span>' +
                                '</button>' +
                                '<div class="dropdown-menu" role="menu">' +
                                '<a class="dropdown-item" href="#" onclick="crudActionLocal(\'' + entity + '\',\'' + entity + '/CrudAction' + '\',' + data + ',' + row.ProjectId + ',\'@Resource.Edit @Resource.Details @Resource.Project\' , \'\')" > <i class="fal fa-edit fa-md"></i> @Resource.Edit</a > ' +
                                '<a class="dropdown-item" href="#" onclick="DeleteItem(' + data + ',\'' + entity + '\',\'' + entity + '-@ViewBag.ProjectId' + '\')"><i class="fal fa-trash-alt fa-md"></i> @Resource.Delete</a>' +
                                '</div>' +
                                '</div>'
                        }
                        , class: 'action-col'
                    },
                    { data: 'Id' },
                    { data: 'Title' },
                    { data: 'Description' },
                    {
                        data: 'IsActive',
                        render: function (data, type, full, meta) {
                            return data ? '<i class="fa-duotone fa-check-to-slot fa-lg text-green"></i>' : '<i class="fa-duotone fa-xmark-to-slot fa-lg text-red"></i>'
                        }

                    }

                ],
                bFilter: true,//Enables Filtering
                bServerSide: true,
            sAjaxSource: '/' + entity + '/GetDataList?id=' +'@ViewBag.ProjectId',
            fnCreatedRow: function (nRow, aData, iDataIndex) {
                $(nRow).attr('id', 'row-' + entity + '-'+ aData['Id']);
                },
                initComplete: function () {

                    var api = this.api();
                    // For each column
                    api
                        .columns()
                        .eq(0)
                        .each(function (colIdx) {
                            // Set the header cell to contain the input element
                            var cell = $('#data-table-' + entity +'-@ViewBag.ProjectId'+ ' .filters th').eq(
                                $(api.column(colIdx).header()).index()
                            );
                            var title = $(cell).text();
                            $(cell).html('<input type="text" class="form-control" placeholder=" " />');

                            // On every keypress in this input
                            $(
                                'input',
                                $('#data-table-' + entity+'-@ViewBag.ProjectId' + ' .filters th').eq($(api.column(colIdx).header()).index())
                            )
                                .off('keyup change')
                                .on('change', function (e) {
                                    // Get the search value
                                    $(this).attr('title', $(this).val());
                                    var regexr = '({search})'; //$(this).parents('th').find('select').val();
                                    var cursorPosition = this.selectionStart;
                                    // Search the column for that value
                                    api
                                        .column(colIdx)
                                        .search(
                                            this.value != ''
                                                //? regexr.replace('{search}', '(((' + this.value + ')))')
                                                ? regexr.replace('{search}', this.value).replace('(', '').replace(')','')
                                                : '',
                                            this.value != '',
                                            this.value == ''
                                        )
                                        .draw();
                                })
                                .on('keydown', function (e) {
                                    if (e.key=='13') {
                                        e.stopPropagation();

                                        $(this).trigger('change');
                                        $(this)
                                            .focus()[0]
                                            .setSelectionRange(cursorPosition, cursorPosition);
                                    }

                                });
                        });


                    $('#data-table-' + entity +'-@ViewBag.ProjectId' + '_wrapper > .dt-buttons').appendTo('div.card-header #card-buttons-' + entity+'-@ViewBag.ProjectId');
                    $('.dt-buttons').addClass('float-left dt-buttons-show');
                    $('.dt-buttons button').addClass('btn btn-sm btn-light');
                    $('#data-table-' + entity +'-@ViewBag.ProjectId' + ' tr.filters').addClass('visible-filters');
                },
        });
    });

    function crudActionLocal(entity, link, id, projectId, title, modalSize) {
         var entity = '@ViewBag.EntityName';
        $.ajax({
            cache: false,
            type: 'GET',
            //url: '/' + entity + '/CrudAction?id=' + id,
            url: '/' + link + '?id=' + id + '&projectId=' + projectId,
            dataType: "html",
            beforeSend: function () {
                $("#overly-loading-" + entity+'-@ViewBag.ProjectId').removeClass("hidden");
            },
            success: function (data) {
                $('#modal-content-title').html('<i class="fad fa-rectangle-history-circle-plus fa-lg"></i> ' + title);
                $('#modal-content-body').html(data);
                if (modalSize != '') {
                    $('#modal-content .modal-dialog').addClass(modalSize);
                }
                $('#modal-content').modal('toggle');               
                 

            },
            error: function (xhr, ajaxOptions, thrownError) {
                toastr.error(thrownError)
            },
            complete: function responce() {
                $("#overly-loading-" + entity+'-@ViewBag.ProjectId').addClass("hidden");
                if ($.validator.unobtrusive != undefined) {
                    $.validator.unobtrusive.parse("#partialForm");
                }
                else { toastr.error('Form validator not found.') }
            }
        });
    }



</script>
