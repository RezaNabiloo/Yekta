@model BSG.ADInventory.Entities.Car
@using BSG.ADInventory.Resources
@using BSG.ADInventory.Common.Enum
@{ViewBag.EntityName = "Car";}
@if (ViewBag.Result == true)
{
    <script>
                $('#modal-content').modal('toggle');
                toastr.success('@Resource.DataSavedSuccessfully');
                $('#data-table-'+'@ViewBag.EntityName').dataTable().api().ajax.reload();
    </script>
}
else
{
    <div class="form-group">
        <div class="row">

            <div class="col-md-12 mb-4">
                <div class="editor-label-field col-md-8 m-auto">
                    <div class="editor-label-field col-md-12 plate-logo text-center">

                        <div class="editor-field">
                            <div class="row">
                                <div class="col-md-2 plate-part-box series-number">
                                    <p><b>ایـران</b></p>
                                    @Html.EditorFor(model => model.PlateSeries, new { htmlAttributes = new { @class = "", @placeholder = "_ _", @style = "" } })
                                </div>

                                <div class="col-md-3 plate-part-box">
                                    @Html.EditorFor(model => model.PlateNumberPart2, new { htmlAttributes = new { @class = "", @placeholder = "_ _ _", @style = "" } })
                                </div>
                                <div class="col-md-3 plate-part-box">
                                    @Html.DropDownListFor(model => model.PlateCharacterId, (SelectList)this.ViewBag.PlateCharacterIds, "...")
                                </div>
                                <div class="col-md-2 plate-part-box">
                                    @Html.EditorFor(model => model.PlateNumberPart1, new { htmlAttributes = new { @class = "", @placeholder = "_ _", @style = "" } })
                                </div>
                                <div class="col-md-1">

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="editor-label-field col-md-6">
                <div class="requiredlable">
                    @this.Html.LabelFor(model => model.CarNature, new { @class = "required" })
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.CarNature, EnumHelper.GetSelectList(typeof(CarNature)), @Resource.Select, new { @class = "form-control" })
                    @this.Html.ValidationMessageFor(model => model.CarNature)
                </div>
            </div>
            <div class="editor-label-field col-md-6">
                <div class="requiredlable">
                    @this.Html.LabelFor(model => model.CarTypeId, new { @class = "required" })
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.CarTypeId, (SelectList)this.ViewBag.CarTypeIds, new { id = "CarTypeId" })
                    @this.Html.ValidationMessageFor(model => model.CarTypeId)
                </div>
            </div>
            <div class="editor-label-field col-md-6">
                <div class="requiredlable">
                    @this.Html.LabelFor(model => model.OwnerDriverId)
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.OwnerDriverId, (SelectList)this.ViewBag.PeopleIds, Resource.Select, new { @class = "select2" })
                    @this.Html.ValidationMessageFor(model => model.OwnerDriverId)
                </div>
            </div>
            <div class="editor-label-field col-md-6">
                <div class="requiredlable">
                    @this.Html.LabelFor(model => model.IsActive)
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.IsActive, new List<SelectListItem>()
                    {
                       new SelectListItem() { Text = Resource.Active, Value = "True" },
                       new SelectListItem() { Text = Resource.InActive, Value = "False"}
                    }, new { @id = "IsActive", @class = "form-control" })
                </div>
            </div>
            <div class="editor-label-field col-md-6">
                <div class="requiredlable">
                    @this.Html.LabelFor(model => model.ModelName)
                </div>
                <div class="editor-field">
                    @this.Html.EditorFor(model => model.ModelName)
                    @this.Html.ValidationMessageFor(model => model.ModelName)
                </div>
            </div>
            <div class="editor-label-field col-md-6">
                <div class="requiredlable">
                    @this.Html.LabelFor(model => model.ProductDate)
                </div>
                <div class="editor-field">
                    @this.Html.EditorFor(model => model.ProductDate)
                    @this.Html.ValidationMessageFor(model => model.ProductDate)
                </div>
            </div>
            <div class="editor-label-field col-md-12">
                <div class="requiredlable">
                    @this.Html.LabelFor(model => model.Description)
                </div>
                <div class="editor-field">
                    @this.Html.EditorFor(model => model.Description)
                    @this.Html.ValidationMessageFor(model => model.Description)
                </div>
            </div>


        </div>
        <div class="row">
            <div class="col-md-12">
                <hr />
                <button type="submit" class="btn btn-default btn-sm"><span class="fal fa-check fa-md text-green"></span> @Resource.Save</button>
                <button type="button" class="btn btn-default btn-sm" data-dismiss="modal"><span class="fal fa-times la-md text-red"></span> @Resource.Close </button>
            </div>
        </div>
    </div>
}

