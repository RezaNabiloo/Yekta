@using BSG.ADInventory.Resources
@{ViewBag.EntityName = "Provider";}
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="overlay-wrapper hidden" id="overly-loading-@ViewBag.EntityName">
                    <div class="overlay flex-column"><i class="fad fa-2x fa-spinner fa-spin"></i><div class="pt-2">@Resource.Loading</div></div>
                </div>
                <div class="card card-default">
                    <div class="card-header">
                        <div class="row ">
                            <div class="col-md-6 col-sm-12" id="card-title"><h4 class="card-title w-100 text-lg-left text-xl-left text-md-left text-sm-center"><i class="fad fa-person-sign fa-lg"></i> @Resource.List @Resource.Providers</h4></div>
                            <div class="col-md-6 col-sm-12" id="card-buttons-@ViewBag.EntityName">
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <table id="data-table-@ViewBag.EntityName" class="display nowrap table-hover table-striped">
                            <thead>
                                <tr>
                                    <th>@Resource.Proceedings</th>
                                    <th>@Html.DisplayName(Resource.Id)</th>
                                    <th>@Html.DisplayName(Resource.Title)</th>
                                    <th>@Html.DisplayName(Resource.Province)</th>
                                    <th>@Html.DisplayName(Resource.Township)</th>
                                    <th>@Html.DisplayName(Resource.Tell)</th>
                                    <th>@Html.DisplayName(Resource.Fax)</th>
                                    <th>@Html.DisplayName(Resource.PostalCode)</th>
                                    <th>@Html.DisplayName(Resource.Address)</th>
                                    <th>@Html.DisplayName(Resource.IsActive)</th>
                                </tr>
                            </thead>

                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@*<script src="~/Content/plugins/jquery-validation/jquery.validate.unobtrusive.min.js"></script>*@

<script type="text/javascript">

    $(document).ready(function () {
        var entity = '@ViewBag.EntityName';
        $('body .dropdown-toggle').dropdown();

        $('#data-table-' + entity + ' thead tr')
            .clone(true)
            .addClass('filters')
            .appendTo('#data-table-' + entity + ' thead');

        table = $('#data-table-' + entity).DataTable({
            orderCellsTop: true,
            fixedHeader: true,
            scrollX: true,
            response: true,
            lengthMenu: [[10, 25, 50, 100, 1000], [10, 25, 50, 100, 1000]],
            dom: 'lfBrtip',
            buttons: [
                { extend: 'copy', exportOptions: { columns: ':visible' } },
                { extend: 'excel', exportOptions: {columns: ':visible' } },
                {
                    extend: 'print',
                    exportOptions: { columns: ':visible' },
                    title: '<div><p class="text-center">@Resource.List @Resource.Providers</p><hr /></div>',
                },
                'colvis',
                {
                    text: '<i class="fal fa-refresh fa-md" data-toggle="tooltip" data-placement="bottom" title="@Resource.Refresh"></i>',
                    action: function (e, dt, node, config) {
                        $('#data-table-' + entity).dataTable().api().ajax.reload();
                    }
                },
                {
                    text: '<i class="fas fa-plus fa-md text-success" data-toggle="tooltip" data-placement="bottom" title="@Resource.Create"></i>',
                    action: function (e, dt, node, config) {
                        crudAction(entity, entity + '/CrudAction', 0, '@Resource.Create @Resource.Provider', '');
                    }
                }
            ],
            retrieve: true,
            Response: true,
            order: [0, 'asc'],
            bProcessing: true,
            language: { url: '/Content/plugins/datatables/fa.json' },
            bFilter: true,
            bServerSide: true,
            sAjaxSource: '/' + entity + '/GetDataList',
            fnCreatedRow: function (nRow, aData, iDataIndex) { $(nRow).attr('id', 'row-' + entity + '-' + aData['Id']); },
            aoColumns: [
                {
                    data: 'Id',
                    render: function (data, type, full, meta) {
                        return '<div class="dropdown">' +
                            '<button type="button" class="btn btn-default dropdown-toggle text-center" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">' +
                            '<span class="fas fa-ellipsis-h fa-sm text-black-50"></span>' +
                            '</button>' +
                            '<ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">' +
                            '<li><a class="dropdown-item text-black-50" href="#" onclick="crudAction(\'' + entity+'\',\'' + entity+'/CrudAction'+ '\',' + data + ',\'@Resource.Edit @Resource.Provider\' , \'\')" > <i class="fal fa-edit fa-md"></i> @Resource.Edit</a></li>' +
                            '<li><a class="dropdown-item text-black-50" href="#" onclick="DeleteItem(' + data + ',\'' + entity + '\',\'' + entity + '\')"><i class="fal fa-trash-alt fa-md"></i> @Resource.Delete</a></li>' +
                            '</ul' +
                            '</div>'
                    }
                    , class: 'action-col'
                },
                { data: 'Id' },
                { data: 'Title' },
                { data: 'Province' },
                { data: 'Township' },
                { data: 'Tell' },
                { data: 'Fax' },
                { data: 'PostalCode' },
                { data: 'Address' },
                {
                    data: 'IsActive',
                    render: function (data, type, full, meta) {
                        return data ? '<i class="fa-duotone fa-check-to-slot fa-lg text-green"></i>' : '<i class="fa-duotone fa-xmark-to-slot fa-lg text-red"></i>'
                    }

                }
            ],
            bFilter: true,//Enables Filtering
            bServerSide: true,
            sAjaxSource: '/' + entity + '/GetDataList',
            fnCreatedRow: function (nRow, aData, iDataIndex) {
                $(nRow).attr('id', 'row-' + entity + '-' + aData['Id']);
            },
            columnDefs: [
                { "width": "50px", "targets": 0 },
                { "width": "50px", "targets": 1 }
            ],
            initComplete: function () {

                var api = this.api();
                // For each column
                api
                    .columns()
                    .eq(0)
                    .each(function (colIdx) {
                        // Set the header cell to contain the input element
                        var cell = $('#data-table-' + entity + '_wrapper .filters th').eq(
                            $(api.column(colIdx).header()).index()
                        );
                        var title = $(cell).text();
                        $(cell).html('<input type="text" class="form-control" placeholder=" " />');

                        // On every keypress in this input
                        $(
                            'input',
                            $('#data-table-' + entity + '_wrapper .filters th').eq($(api.column(colIdx).header()).index())
                        )
                            .off('keyup change')
                            .on('change', function (e) {
                                // Get the search value
                                $(this).attr('title', $(this).val());
                                var regexr = '({search})'; //$(this).parents('th').find('select').val();
                                var cursorPosition = this.selectionStart;
                                // Search the column for that value
                                api
                                    .column(colIdx)
                                    .search(
                                        this.value != ''
                                            //? regexr.replace('{search}', '(((' + this.value + ')))')
                                            ? regexr.replace('{search}', this.value).replace('(', '').replace(')', '')
                                            : '',
                                        this.value != '',
                                        this.value == ''
                                    )
                                    .draw();
                            })
                            .on('keydown', function (e) {
                                if (e.key == '13') {
                                    e.stopPropagation();

                                    $(this).trigger('change');
                                    $(this)
                                        .focus()[0]
                                        .setSelectionRange(cursorPosition, cursorPosition);
                                }

                            });
                    });
                $('#data-table-' + entity + '_wrapper > .dt-buttons').appendTo('div.card-header #card-buttons-' + entity);
                $('.dt-buttons').addClass('float-left dt-buttons-show');
                $('.dt-buttons button').addClass('btn btn-sm btn-light');
                $('#data-table-' + entity + '_wrapper tr.filters').fadeIn(1000);
                table.columns.adjust();
            },
        });

    });
</script>
