@model BSG.ADInventory.Models.User.UserRoleModel
@using BSG.ADInventory.Resources
@{ViewBag.EntityName = "User";}
@if (ViewBag.Result == true)
{
    <script>
                $('#modal-content').modal('toggle');
                toastr.success('@Resource.DataSavedSuccessfully');
                $('#data-table-'+'@ViewBag.EntityName').dataTable().api().ajax.reload();
    </script>
}
else
{
    <div class="form-group">
        <div class="row">
            <div class="col-md-3">
                <div class="row">
                    <div class="editor-label-field col-md-12">
                        <div class="editor-label">
                            @this.Html.LabelFor(model => model.UserName, new { @class = "required" })
                        </div>
                        <div class="editor-field">
                            @this.Html.EditorFor(model => model.UserName, new {HtmlAttributes =new { @class="form-control"} })
                            @this.Html.ValidationMessageFor(model => model.UserName)
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="editor-label-field">
                            <div class="editor-label">
                                @this.Html.LabelFor(model => model.Password, new { @class = "required" })
                            </div>
                            <div class="editor-field">
                                @this.Html.PasswordFor(model => model.Password, new { @class="form-control"} )
                                @this.Html.ValidationMessageFor(model => model.Password)
                            </div>
                        </div>
                    </div>
                    <div class="editor-label-field col-md-12">
                        <div class="requiredlable">
                            @this.Html.Label(Resource.Status)
                        </div>
                        <div class="editor-field">
                            @Html.DropDownListFor(model => model.IsActive, new List<SelectListItem>()
                            {
                               new SelectListItem() { Text = Resource.Active, Value = "True" },
                               new SelectListItem() { Text = Resource.InActive, Value = "False"}
                            }, new { @id = "IsActive", @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="editor-label-field">
                            <div class="editor-label">
                                @this.Html.LabelFor(model => model.Email)
                            </div>
                            <div class="editor-field">
                                @this.Html.EditorFor(model => model.Email, new { HtmlAttributes = new { @class = "form-control", style = "direction: ltr;" } })
                                @this.Html.ValidationMessageFor(model => model.Email)
                            </div>
                        </div>
                    </div>

                    <div class="col-md-12">
                        <div class="editor-label-field">
                            <div class="editor-label">
                                @this.Html.LabelFor(model => model.PeopleId, new { @class = "required" })
                            </div>
                            <div class="editor-field">
                                @Html.DropDownListFor(model => model.PeopleId, (SelectList)this.ViewBag.PeopleIds, Resource.Select, new { id = "PeopleId", @class = "select2 form-control" })
                                @this.Html.ValidationMessageFor(model => model.PeopleId)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">

                <div class="card card-default">
                    <div class="card-header">
                        <h3 class="card-title">
                            <i class="fa-duotone fa-person-military-pointing fa-lg"></i>
                            @Resource.Roles
                        </h3>
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        @*<input id="selectAllCheckbox" type="checkbox" onclick="setAllCheckboxes(this.checked)" />
                    <span>@Resource.SelectAll</span>
                    <hr />*@
                        <div id="roleCheckBoxList">
                            @for (int i = 0; i < Model.Roles.Count(); i++)
                            {
                                @Html.HiddenFor(model => model.Roles[i].Id)
                                @Html.CheckBoxFor(model => model.Roles[i].IsSelected)
                                @Html.Label(Model.Roles[i].Value, new { @class = "pr-1 font-weight-light" })
                                @Html.HiddenFor(model => model.Roles[i].Value)
                                <br />
                            }
                        </div>
                        @this.Html.ValidationMessageFor(model => model.Roles)
                    </div>
                </div>
            </div>
            <div class="col-md-5">

                <div class="card card-default">
                    <div class="card-header">
                        <h3 class="card-title h3">
                            <i class="fa-duotone fa-roller-coaster fa-lg"></i>
                            @Resource.Projects
                        </h3>
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        @*<input id="selectAllCheckbox" type="checkbox" onclick="setAllCheckboxes(this.checked)" />
                    <span>@Resource.SelectAll</span>
                    <hr />*@
                        <div id="roleCheckBoxList">
                            @for (int i = 0; i < Model.Projects.Count(); i++)
                            {
                                @Html.HiddenFor(model => model.Projects[i].Id)
                                @Html.CheckBoxFor(model => model.Projects[i].IsSelected)
                                @Html.Label(Model.Projects[i].Value, new { @class = "pr-1 font-weight-light" })
                                @Html.HiddenFor(model => model.Projects[i].Value)
                                <br />
                            }
                        </div>
                        @this.Html.ValidationMessageFor(model => model.Projects)
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <hr />
                <button type="submit" class="btn btn-default btn-sm"><span class="fal fa-check fa-md text-green"></span> @Resource.Save</button>
                <button type="button" class="btn btn-default btn-sm" data-dismiss="modal"><span class="fal fa-times la-md text-red"></span> @Resource.Close </button>
            </div>
        </div>
    </div>

}
<script>
    $(document).ready(function () {
        $('.select2').select2();
    });
</script>
