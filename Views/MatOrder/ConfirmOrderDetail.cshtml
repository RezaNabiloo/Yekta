@model BSG.ADInventory.Models.MatOrder.MatOrderConfirmModel
@using BSG.ADInventory.Resources
@{ViewBag.EntityName = "MatOrderConfirmDetail";}
@if (ViewBag.Result == true)
{
    <script>
                $('#modal-content').modal('toggle');
                toastr.success('@Resource.DataSavedSuccessfully');
                $('#data-table-'+'@ViewBag.EntityName').dataTable().api().ajax.reload();
    </script>
}
else
{
    <div class="form-group">
        <div class="row">
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.Project)
            @Html.HiddenFor(model => model.RequiredDate)
            @Html.HiddenFor(model => model.RequestUser)
            @Html.HiddenFor(model => model.RequestDescription)
            <div class="col-md-12">
                <div class="row">
                    @Html.HiddenFor(model => model.Id)
                    <div class="col-md-4">
                        <p class="pb-0">@this.Html.LabelFor(model => model.Project): @Html.DisplayFor(model => model.Project)</p>
                    </div>
                    <div class="col-md-4">
                        <p class="pb-0">@this.Html.Label(Resource.RequestedUser): @Html.DisplayFor(model => model.RequestUser)</p>
                    </div>
                    <div class="col-md-4">
                        <p class="pb-0">@this.Html.LabelFor(model => model.RequiredDate): <span>@Model.RequiredDate.ToShortDateString() </span></p>
                    </div>
                    <div class="col-md-4">
                        <p class="pb-0">@this.Html.LabelFor(model => model.RequestDescription): @Html.DisplayFor(model => model.RequestDescription)</p>
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-group table-responsive">
                    <table class="table">
                        <thead>
                            <tr class="fit">
                                <th>@Resource.Row</th>
                                <th>@Resource.MatCode</th>
                                <th>@Html.DisplayName(Resource.MatDescription)</th>
                                <th>@Html.DisplayName(Resource.MatUnit)</th>
                                <th>@Html.DisplayName(Resource.RequestedAmount)</th>
                                <th>@Html.DisplayName(Resource.ConfirmedAmount)</th>
                                <th>@Html.DisplayName(Resource.Description)</th>
                            </tr>
                        </thead>
                        <tbody>

                            @for (int i = 0; i < Model.Mats.Count(); i++)

                            {
                                <tr class="fit">
                                    @Html.HiddenFor(model => model.Mats[i].Id)
                                    @Html.HiddenFor(model => model.Mats[i].MatId)
                                    @Html.HiddenFor(model => model.Mats[i].Title)
                                    @Html.HiddenFor(model => model.Mats[i].RequiredAmount)
                                    <td>@(i + 1)</td>
                                    <td>@Html.DisplayFor(model => model.Mats[i].MatId)</td>
                                    <td>@Html.DisplayFor(model => model.Mats[i].Title)</td>
                                    <td>@Html.DisplayFor(model => model.Mats[i].MatUnit)</td>
                                    <td>@Html.EditorFor(model => model.Mats[i].RequiredAmount, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })</td>
                                    <td>@Html.EditorFor(model => model.Mats[i].ConfirmedAmount, new { htmlAttributes = new { @class = "form-control" } })</td>
                                    <td>@Html.EditorFor(model => model.Mats[i].ConfirmDescription, new { htmlAttributes = new { @class = "form-control", @style = "width:100% !important; min-width:180px;" } })</td>
                                </tr>
                            }
                        </tbody>

                    </table>
                    @this.Html.ValidationMessageFor(model => model.Mats)
                </div>
                
                <div class="editor-label-field col-md-12">
                    <div class="requiredlable">
                        @this.Html.LabelFor(model => model.ConfirmDescription)
                    </div>
                    <div class="editor-field">
                        @this.Html.TextAreaFor(model => model.ConfirmDescription, new { @class = "form-control" , @rows=3} )
                        @this.Html.ValidationMessageFor(model => model.ConfirmDescription)
                    </div>
                </div>
            </div>

        </div>
        <div class="row">
            <div class="col-md-12">
                <hr />
                <button type="submit" class="btn btn-default btn-sm"><span class="fal fa-check fa-md text-green"></span> @Resource.Save</button>
                <button type="button" class="btn btn-default btn-sm" data-dismiss="modal"><span class="fal fa-times la-md text-red"></span> @Resource.Close </button>
            </div>
        </div>
    </div>
}
